name: Update Proxy Configs

on:
  schedule:
    - cron: '0 */9 * * *' # Запускать каждый 9-й час (00:00, 09:00, 18:00 UTC)
  workflow_dispatch: # Разрешить ручной запуск workflow

permissions:
  contents: write # Разрешение на запись для коммита изменений

jobs:
  update-configs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # Используем GITHUB_TOKEN, не нужен SECRET_TOKEN для записи в тот же репозиторий
      with:
        token: ${{ github.token }}

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up cache for pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-cache-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          pip-cache-${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create configs directory
      run: mkdir -p configs # Убрали assets, оставили только configs

    - name: Check channel_urls.txt exists
      run: |
        if [ ! -f channel_urls.txt ]; then
          echo "channel_urls.txt не найден. Будет создан пустой файл."
          touch channel_urls.txt
        else
          echo "channel_urls.txt найден."
        fi

    - name: Run config fetcher script
      run: python src/config.py # Запускаем скрипт
      # continue-on-error: true # Раскомментируйте, если хотите, чтобы workflow продолжался даже при ошибке скрипта, но обычно лучше убрать для выявления проблем

    - name: Script execution status
      if: always()
      run: echo "Python script src/config.py executed."

    - name: Setup Git user
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Commit and push changes
      id: git_push
      run: |
        git pull --rebase origin main || true # Добавили pull --rebase перед изменениями
        git add configs/proxy_configs_all.txt configs/proxy_configs_live.txt channel_urls.txt # Добавили proxy_configs_live.txt
        if ! git diff --staged --quiet; then
          commit_message="Update proxy configs (all and live), stats and reports" # Более информативное сообщение
          echo "Committing with message: ${commit_message}"
          git commit -m "${commit_message}"
          git push origin HEAD:main
          echo "::set-output name=pushed::true"
          echo "Changes committed and pushed."
        else
          echo "No changes to commit."
          echo "::set-output name=pushed::false"
        fi
